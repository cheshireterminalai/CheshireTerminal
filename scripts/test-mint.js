import dotenv from "dotenv";
import fs from "fs/promises";
import path from "path";
import { fileURLToPath } from "url";

import { nftMinter } from "../utils/nft-minter.js";

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Load environment variables
dotenv.config({ path: path.join(__dirname, '..', '.env') });

async function testMint() {
    try {
        // Check wallet balance first
        const balance = await nftMinter.getBalance();
        console.log('\nCurrent wallet balance:', balance, 'SOL');

        // Get the latest generated image
        const generatedDir = path.join(__dirname, '..', 'generated', 'images');
        const files = await fs.readdir(generatedDir);
        const latestImage = files
            .filter(f => f.startsWith('generated_'))
            .sort()
            .reverse()[0];

        if (!latestImage) {
            throw new Error('No generated images found');
        }

        const imagePath = path.join(generatedDir, latestImage);
        console.log('\nUsing image:', imagePath);

        // Mint NFT
        console.log('\nStarting NFT mint process...');
        const result = await nftMinter.mintNFT(
            imagePath,
            'Cheshire Cat NFT',
            'A unique Cheshire Cat NFT generated by AI',
            [
                { trait_type: 'Collection', value: 'Cheshire Terminal' },
                { trait_type: 'Artist', value: 'AI Generated' },
                { trait_type: 'Series', value: 'Genesis' }
            ]
        );

        console.log('\n=== NFT Minted Successfully! ===\n');
        console.log('Mint Address:', result.mint);
        console.log('Name:', result.name);
        console.log('Image URL:', result.imageUrl);
        console.log('Metadata URL:', result.metadataUrl);
        console.log('\nView on Solana Explorer:', result.explorerUrl);

        // Check final balance
        const finalBalance = await nftMinter.getBalance();
        console.log('\nFinal wallet balance:', finalBalance, 'SOL');
        console.log('Cost:', balance - finalBalance, 'SOL');

    } catch (error) {
        console.error('\nError minting NFT:', error.message);
        process.exit(1);
    }
}

// Run the test
console.log('\n=== Testing NFT Minting Process ===\n');
testMint();
